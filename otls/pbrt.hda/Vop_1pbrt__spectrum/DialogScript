# Dialog script for pbrt_spectrum automatically generated

{
    name	pbrt_spectrum
    script	pbrt_spectrum
    label	"PBRT Spectrum"

    rendermask	PBRT
    externalshader 1
    shadertype	generic
    output	struct_PBRTSpectrum	output	Output
    signature	"Default Inputs"	default	{ struct_PBRTSpectrum }

    outputoverrides	default
    {
	___begin	auto
			(0)
    }

    help {
	""
    }

    parm {
        name    "type"
        label   "Spectrum Type"
        type    ordinal
        default { "0" }
        menu {
            "rgb"       "RGB"
            "spd"       "SPD"
            "file"      "SPD File"
            "ramp"      "SPD Ramp"
            "blackbody" "Blackbody"
        }
    }
    parm {
        name    "rgb"
        label   "RGB"
        type    color
        size    3
        default { "1" "1" "1" }
        hidewhen "{ type != rgb }"
        range   { 0 1 }
    }
    parm {
        name    "spd"
        label   "SPD"
        type    keyvaluedict
        default { "0" }
        hidewhen "{ type != spd }"
        parmtag { "sidefx::key_value_dict_key_label" "Wavelength" }
        parmtag { "sidefx::key_value_dict_value_label" "Value" }
    }
    parm {
        name    "file"
        label   "SPD File"
        type    file
        default { "" }
        hidewhen "{ type != file }"
        menureplace {
            [ "# From pbrt/util/spectrum.cpp" ]
            [ "named_spectrum = (" ]
            [ "        \"glass-BK7\"," ]
            [ "        \"glass-BAF10\"," ]
            [ "        \"glass-FK51A\"," ]
            [ "        \"glass-LASF9\"," ]
            [ "        \"glass-F5\"," ]
            [ "        \"glass-F10\"," ]
            [ "        \"glass-F11\"," ]
            [ "        \"metal-Ag-eta\"," ]
            [ "        \"metal-Ag-k\"," ]
            [ "        \"metal-Al-eta\"," ]
            [ "        \"metal-Al-k\"," ]
            [ "        \"metal-Au-eta\"," ]
            [ "        \"metal-Au-k\"," ]
            [ "        \"metal-Cu-eta\"," ]
            [ "        \"metal-Cu-k\"," ]
            [ "        \"metal-CuZn-eta\"," ]
            [ "        \"metal-CuZn-k\"," ]
            [ "        \"metal-MgO-eta\"," ]
            [ "        \"metal-MgO-k\"," ]
            [ "        \"metal-TiO2-eta\"," ]
            [ "        \"metal-TiO2-k\"," ]
            [ "        \"stdillum-A\"," ]
            [ "        \"stdillum-D50\"," ]
            [ "        \"stdillum-D65\"," ]
            [ "        \"stdillum-F1\"," ]
            [ "        \"stdillum-F2\"," ]
            [ "        \"stdillum-F3\"," ]
            [ "        \"stdillum-F4\"," ]
            [ "        \"stdillum-F5\"," ]
            [ "        \"stdillum-F6\"," ]
            [ "        \"stdillum-F7\"," ]
            [ "        \"stdillum-F8\"," ]
            [ "        \"stdillum-F9\"," ]
            [ "        \"stdillum-F10\"," ]
            [ "        \"stdillum-F11\"," ]
            [ "        \"stdillum-F12\"," ]
            [ "        \"illum-acesD60\"," ]
            [ "        \"Canon5dMarkII_R\"," ]
            [ "        \"Canon5dMarkII_G\"," ]
            [ "        \"Canon5dMarkII_B\"," ]
            [ "    )" ]
            [ "return [x for x in named_spectrum for _ in [0,1]]" ]
            language python
        }
        parmtag { "filechooser_mode" "read" }
    }
    parm {
        name    "blackbody"
        label   "Kelvin"
        type    float
        default { "6500" }
        hidewhen "{ type != blackbody }"
        range   { 0! 1 }
    }
    parm {
        name    "ramp"
        label   "SPD Ramp"
        type    ramp_flt
        default { "2" }
        hidewhen "{ type != ramp }"
        range   { 1! 10 }
        parmtag { "rampbasisdefault" "catmull-rom" }
        parmtag { "rampcolortype" "rgb" }
    }
    parm {
        name    "ramp_range"
        label   "Spectrum Range"
        type    vector2
        size    2
        default { "380" "780" }
        hidewhen "{ type != ramp }"
        range   { -1 1 }
    }
    parm {
        name    "ramp_samples"
        label   "Spectrum Samples"
        type    integer
        default { "80" }
        hidewhen "{ type != ramp }"
        range   { 0 10 }
    }
}
