# Dialog script for pbrt_texture_imagemap automatically generated

{
    name	pbrt_texture_imagemap
    script	imagemap
    label	"PBRT ImageTexture"

    rendermask	PBRT
    externalshader 1
    shadertype	generic
    output	float	output	Output
    signature	Float	default	{ float }
    signature	Spectrum	s	{ struct_PBRTSpectrum }

    outputoverrides	default
    {
	___begin	auto
			(0)
    }
    outputoverrides	s
    {
	___begin	auto
			(0)
    }

    help {
    }

    parm {
        name    "signature"
        baseparm
        label   "Signature"
        export  none
    }
    parm {
        name    "filename"
        label   "Filename"
        type    image
        default { "" }
        help    "The filename of the image to load. Currently pbrt supports TGA, PFM, and EXR format images. "
        parmtag { "filechooser_mode" "read" }
    }
    parm {
        name    "scale"
        label   "Scale"
        type    float
        default { "1" }
        help    "Scale factor to apply to value looked up in texture. "
        range   { 0 10 }
    }
	parm {
		name	"invert"
		label	"Invert"
		type	toggle
		default { "0" }
		help	"Invert the texture values."
	}
    parm {
        name    "wrap"
        label   "Wrap"
        type    ordinal
        default { "repeat" }
        help    "What to do with texture coordinates that fall outside the legal [0,1] range."
        menu {
            "repeat"    "Repeat"
            "black"     "Black"
            "clamp"     "Clamp"
			"octahedralsphere"	"Octahedralsphere"
        }
    }
    parm {
        name    "filter"
        label   "Filter"
        type    ordinal
        default { "bilinear" }
		menu {
			"point"	"Point"
			"bilinear"	"Bilinear"
			"trilinear"	"Trilinear"
			"ewa"	"EWA"
		}
        help    "Mipmap filtering"
    }
    parm {
        name    "maxanisotropy"
        label   "Max Anisotropy"
        type    float
        default { "8" }
        help    "The maximum elliptical eccentricity for the EWA algorithm. "
        range   { 0 16 }
		disablewhen "{ filter != ewa }"
    }
    parm {
        name    "auto_gamma"
        label   "Auto Gamma"
        type    toggle
        default { "1" }
        help    "Toggles whether PBRT should automatically determine if texture is sRGB or not. When off, the gamma parameter is forced exported. Otherwise no parameter is output and PBRT auto determines."
        parmtag { "pbrt.meta" "1" }
    }
    parm {
        name    "encoding"
        label   "Encoding"
        type    ordinal
        default { "linear" }
		menu {
			"linear"	"Linear"
			"sRGB"	"sRGB"
			"gamma" "Gamma"
		}
        help    "Indicates whether texel values should be converted from sRGB gamma space to linear space. This parameter is \"true\" by default for textures stored in 8-bit formats like TGA and PNG, and \"false\" for floating-point formats like EXR and PFM."
        disablewhen "{ auto_gamma 1 }"
        parmtag { "pbrt.force" "1" }
		parmtag { "pbrt.callback" "custom_gamma" }
    }
    parm {
        name    "gamma"
        label   "Gamma"
        type    float
        default { "2.2" }
        help    "Custom gamma value"
        disablewhen "{ auto_gamma 1 } { encoding != gamma }" 
        parmtag { "pbrt.meta" "1" }
    }
    group {
        name    "folder0"
        label   "2D Mapping"

        parm {
            name    "mapping"
            label   "Mapping"
            type    ordinal
            default { "uv" }
            help    "A string specifying the kind of texture coordinate mapping to use. Legal values are: \"uv\", \"spherical\", \"cylindrical\", or \"planar\". "
            menu {
                "uv"            "UVs"
                "spherical"     "Spherical"
                "cylindrical"   "Cylindrical"
                "planar"        "Planar"
            }
        }
        parm {
            name    "uscale"
            label   "Scale U"
            type    float
            default { "1" }
            help    "Scaling factors to be applied to the u and v texture coordinates, respectively. These parameters are only meaningful if the texture coordinate mapping type has been set to \"uv\". "
            disablewhen "{ mapping != uv }"
            range   { 0 10 }
        }
        parm {
            name    "vscale"
            label   "Scale V"
            type    float
            default { "1" }
            help    "Scaling factors to be applied to the u and v texture coordinates, respectively. These parameters are only meaningful if the texture coordinate mapping type has been set to \"uv\". "
            disablewhen "{ mapping != uv }"
            range   { 0 10 }
        }
        parm {
            name    "udelta"
            label   "Delta U"
            type    float
            default { "0" }
            help    "An offset to be applied to the u and v texture coordinates, respectively. These parameters are only meaningful if the texture coordinate mapping type has been set to \"uv\" or \"planar\". "
            disablewhen "{ mapping != uv mapping != planar }"
            range   { 0 10 }
        }
        parm {
            name    "vdelta"
            label   "Delta V"
            type    float
            default { "0" }
            help    "An offset to be applied to the u and v texture coordinates, respectively. These parameters are only meaningful if the texture coordinate mapping type has been set to \"uv\" or \"planar\". "
            disablewhen "{ mapping != uv mapping != planar }"
            range   { 0 10 }
        }
        parm {
            name    "v1"
            label   "v1"
            type    vector
            size    3
            default { "1" "0" "0" }
            help    "v1 and v2 are two vectors that define a planar mapping. "
            disablewhen "{ mapping != planar }"
            range   { -1 1 }
            parmtag { "pbrt.type" "vector" }
        }
        parm {
            name    "v2"
            label   "v2"
            type    vector
            size    3
            default { "0" "1" "0" }
            help    "v1 and v2 are two vectors that define a planar mapping. "
            disablewhen "{ mapping != planar }"
            range   { -1 1 }
            parmtag { "pbrt.type" "vector" }
        }
    }

}
